name: Trivy Security Analysis

on:
  push:
    branches: ["main", "develop"]  # Adapte selon tes branches principales
  pull_request:
    branches: ["main", "develop"]

jobs:
  trivy-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      # Scan Trivy complet (JSON)
      - name: Generate Trivy Vulnerability Report (JSON)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          output: trivy-report.json
          format: json
          scan-ref: .
          exit-code: 0

      - name: Upload Vulnerability Scan Results (JSON)
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report-json
          path: trivy-report.json
          retention-days: 30

      # Scan Trivy bloquant (HIGH/CRITICAL)
      - name: Fail build on High/Critical Vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          format: table
          scan-ref: .
          severity: HIGH,CRITICAL
          ignore-unfixed: true
          exit-code: 1
          skip-setup-trivy: true

      # (Optionnel) Scan de conteneur Docker
      - name: Build Docker image for Trivy scan
        run: docker build -t my-image:latest .

      - name: Trivy Docker Scan (Container)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image"
          image-ref: my-image:latest
          severity: HIGH,CRITICAL
          exit-code: 1
